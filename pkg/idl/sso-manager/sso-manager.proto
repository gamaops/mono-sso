syntax = "proto3";

option go_package = "github.com/gamaops/mono-sso/pkg/idl/sso-manager";

package sso.manager;

import "sso-common/sso-common.proto";

enum ClientType {
	PUBLIC = 0;
	CONFIDENTIAL = 1;
}

message UpsertClientRequest {
	sso.common.RequestSession session = 1;
	string client_id = 2;
	ClientType type = 3;
	repeated string redirect_uris = 4;
	string name = 5;
}

message UpsertClientResponse {
	sso.common.ResponseStatus status = 1;
	string client_id = 2;
	string client_secret = 3;
}

message DeleteClientRequest {
	sso.common.RequestSession session = 1;
	string client_id = 2;
}

message DeleteClientResponse {
	sso.common.ResponseStatus status = 1;
}

message UpsertScopeRequest {
	sso.common.RequestSession session = 1;
	string client_id = 2;
	string scope = 3;
	string description = 4;
}

message UpsertScopeResponse {
	sso.common.ResponseStatus status = 1;
}

message DeleteScopeRequest {
	sso.common.RequestSession session = 1;
	string client_id = 2;
	string scope = 3;
}

message DeleteScopeResponse {
	sso.common.ResponseStatus status = 1;
}

service ClientService {
	rpc UpsertClient(UpsertClientRequest) returns (UpsertClientResponse);
	rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse);
	rpc UpsertScope(UpsertScopeRequest) returns (UpsertScopeResponse);
	rpc DeleteScope(DeleteScopeRequest) returns (DeleteClientResponse);
}